@namespace BootstrapBlazor.Components
@using BootstrapBlazor.OpenAI.GPT3.Services 

@{
    bool isSimpleText = (SelectedEnumItem == EnumOpenAiModel.ChatGpt || SelectedEnumItem == EnumOpenAiModel.ChatGpt4 || SelectedEnumItem == EnumOpenAiModel.Completions || SelectedEnumItem == EnumOpenAiModel.ChatGptAiHomeAssistant || SelectedEnumItem == EnumOpenAiModel.Chatbot);
}
<div class="row g-3">
    <div class="col-12">
        <RadioList IsButton="true" @bind-Value="@SelectedEnumItem" />
    </div>
    <div class="col-12" @ref="Element">
        @if (isSimpleText)
        {
            <Textarea Id="@ID" Value="@ResultText" rows="20" />
        }
        else
        {
            <Textarea Id="@ID" Value="@ResultText" rows="10" />
        }
    </div>
    <div class="col-12">
        @if (ResultImage is not null)
        {
            <p>
                <img src="@ResultImage" style="max-width:80%;max-height:520px;overflow :scroll;" />
            </p>
        }
    </div>
    <div class="col-12">
        @if (isSimpleText)
        {
            <BootstrapInputGroup>
                <BootstrapInput IsAutoFocus ShowLabel="true" TValue="string" PlaceHolder="@PlaceHolderText" OnEnterAsync="OnEnterAsync" OnEscAsync="OnEscAsync" @bind-Value="InputText" />
                <Button Text="Enter" OnClick="OnEnter" Icon="fa-fw fa-solid fa-paper-plane" />
                <Button Text="Clear" OnClick="OnClear" Icon="fa-fw fa-solid fa-trash" />
            </BootstrapInputGroup>
        }
        else
        {
            <Textarea ShowLabel="true" @bind-Value="InputText" rows="6" />
            <br/>
            <BootstrapInputGroup>
                <Button Text="Enter" OnClick="OnEnter" Icon="fa-fw fa-solid fa-paper-plane" />
                <Button Text="Clear" OnClick="OnClear" Icon="fa-fw fa-solid fa-trash" />
            </BootstrapInputGroup>
        }
    </div>

    @if (ShowOptions)
    {
        <div class="col-6">
            <Select Color="Color.Primary" Items="ItemsMaxToken" @bind-Value="@SelectedMaxTokens" ShowLabel="true" DisplayText="MaxToken 生成的最大令牌数" />
        </div>
        <div class="col-6">
            <Select Color="Color.Primary" Items="ItemsTemperature" @bind-Value="@SelectedTemperature" ShowLabel="true" DisplayText="Temperature 模型的输出的多样性" />
        </div>
    }

</div>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p>@ErrorMessage</p>
}

